// Generated by view binder compiler. Do not edit!
package com.example.shoes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView banner;

  @NonNull
  public final ImageView btnCamera;

  @NonNull
  public final TextView btnSearch;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final VideoView homeVideo;

  @NonNull
  public final RecyclerView list;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvWeather;

  private FragmentHomeBinding(@NonNull ScrollView rootView, @NonNull ImageView banner,
      @NonNull ImageView btnCamera, @NonNull TextView btnSearch, @NonNull EditText etSearch,
      @NonNull VideoView homeVideo, @NonNull RecyclerView list, @NonNull TextView tvLocation,
      @NonNull TextView tvWeather) {
    this.rootView = rootView;
    this.banner = banner;
    this.btnCamera = btnCamera;
    this.btnSearch = btnSearch;
    this.etSearch = etSearch;
    this.homeVideo = homeVideo;
    this.list = list;
    this.tvLocation = tvLocation;
    this.tvWeather = tvWeather;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.banner;
      ImageView banner = ViewBindings.findChildViewById(rootView, id);
      if (banner == null) {
        break missingId;
      }

      id = R.id.btn_camera;
      ImageView btnCamera = ViewBindings.findChildViewById(rootView, id);
      if (btnCamera == null) {
        break missingId;
      }

      id = R.id.btn_search;
      TextView btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.et_search;
      EditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.homeVideo;
      VideoView homeVideo = ViewBindings.findChildViewById(rootView, id);
      if (homeVideo == null) {
        break missingId;
      }

      id = R.id.list;
      RecyclerView list = ViewBindings.findChildViewById(rootView, id);
      if (list == null) {
        break missingId;
      }

      id = R.id.tv_location;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tv_weather;
      TextView tvWeather = ViewBindings.findChildViewById(rootView, id);
      if (tvWeather == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ScrollView) rootView, banner, btnCamera, btnSearch, etSearch,
          homeVideo, list, tvLocation, tvWeather);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
