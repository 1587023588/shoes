// Generated by view binder compiler. Do not edit!
package com.example.shoes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoes.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScanBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout actionsPanel;

  @NonNull
  public final FrameLayout barcodeContainer;

  @NonNull
  public final MaterialButton btnPickFromGallery;

  @NonNull
  public final MaterialButton btnStartExternal;

  @NonNull
  public final MaterialButton btnTorch;

  @NonNull
  public final MaterialCardView resultCard;

  @NonNull
  public final TextView resultText;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityScanBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout actionsPanel, @NonNull FrameLayout barcodeContainer,
      @NonNull MaterialButton btnPickFromGallery, @NonNull MaterialButton btnStartExternal,
      @NonNull MaterialButton btnTorch, @NonNull MaterialCardView resultCard,
      @NonNull TextView resultText, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.actionsPanel = actionsPanel;
    this.barcodeContainer = barcodeContainer;
    this.btnPickFromGallery = btnPickFromGallery;
    this.btnStartExternal = btnStartExternal;
    this.btnTorch = btnTorch;
    this.resultCard = resultCard;
    this.resultText = resultText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_scan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionsPanel;
      LinearLayout actionsPanel = ViewBindings.findChildViewById(rootView, id);
      if (actionsPanel == null) {
        break missingId;
      }

      id = R.id.barcodeContainer;
      FrameLayout barcodeContainer = ViewBindings.findChildViewById(rootView, id);
      if (barcodeContainer == null) {
        break missingId;
      }

      id = R.id.btnPickFromGallery;
      MaterialButton btnPickFromGallery = ViewBindings.findChildViewById(rootView, id);
      if (btnPickFromGallery == null) {
        break missingId;
      }

      id = R.id.btnStartExternal;
      MaterialButton btnStartExternal = ViewBindings.findChildViewById(rootView, id);
      if (btnStartExternal == null) {
        break missingId;
      }

      id = R.id.btnTorch;
      MaterialButton btnTorch = ViewBindings.findChildViewById(rootView, id);
      if (btnTorch == null) {
        break missingId;
      }

      id = R.id.resultCard;
      MaterialCardView resultCard = ViewBindings.findChildViewById(rootView, id);
      if (resultCard == null) {
        break missingId;
      }

      id = R.id.resultText;
      TextView resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityScanBinding((CoordinatorLayout) rootView, actionsPanel, barcodeContainer,
          btnPickFromGallery, btnStartExternal, btnTorch, resultCard, resultText, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
