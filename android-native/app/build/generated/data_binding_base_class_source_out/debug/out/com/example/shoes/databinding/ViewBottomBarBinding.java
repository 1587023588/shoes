// Generated by view binder compiler. Do not edit!
package com.example.shoes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewBottomBarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout bottomNav;

  @NonNull
  public final LinearLayout btnCategory;

  @NonNull
  public final LinearLayout btnHome;

  @NonNull
  public final LinearLayout btnMessage;

  @NonNull
  public final LinearLayout btnMine;

  @NonNull
  public final ImageView iconCategory;

  @NonNull
  public final ImageView iconHome;

  @NonNull
  public final ImageView iconMessage;

  @NonNull
  public final ImageView iconMine;

  @NonNull
  public final TextView labelCategory;

  @NonNull
  public final TextView labelHome;

  @NonNull
  public final TextView labelMessage;

  @NonNull
  public final TextView labelMine;

  private ViewBottomBarBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout bottomNav,
      @NonNull LinearLayout btnCategory, @NonNull LinearLayout btnHome,
      @NonNull LinearLayout btnMessage, @NonNull LinearLayout btnMine,
      @NonNull ImageView iconCategory, @NonNull ImageView iconHome, @NonNull ImageView iconMessage,
      @NonNull ImageView iconMine, @NonNull TextView labelCategory, @NonNull TextView labelHome,
      @NonNull TextView labelMessage, @NonNull TextView labelMine) {
    this.rootView = rootView;
    this.bottomNav = bottomNav;
    this.btnCategory = btnCategory;
    this.btnHome = btnHome;
    this.btnMessage = btnMessage;
    this.btnMine = btnMine;
    this.iconCategory = iconCategory;
    this.iconHome = iconHome;
    this.iconMessage = iconMessage;
    this.iconMine = iconMine;
    this.labelCategory = labelCategory;
    this.labelHome = labelHome;
    this.labelMessage = labelMessage;
    this.labelMine = labelMine;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewBottomBarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewBottomBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_bottom_bar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewBottomBarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout bottomNav = (LinearLayout) rootView;

      id = R.id.btn_category;
      LinearLayout btnCategory = ViewBindings.findChildViewById(rootView, id);
      if (btnCategory == null) {
        break missingId;
      }

      id = R.id.btn_home;
      LinearLayout btnHome = ViewBindings.findChildViewById(rootView, id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.btn_message;
      LinearLayout btnMessage = ViewBindings.findChildViewById(rootView, id);
      if (btnMessage == null) {
        break missingId;
      }

      id = R.id.btn_mine;
      LinearLayout btnMine = ViewBindings.findChildViewById(rootView, id);
      if (btnMine == null) {
        break missingId;
      }

      id = R.id.icon_category;
      ImageView iconCategory = ViewBindings.findChildViewById(rootView, id);
      if (iconCategory == null) {
        break missingId;
      }

      id = R.id.icon_home;
      ImageView iconHome = ViewBindings.findChildViewById(rootView, id);
      if (iconHome == null) {
        break missingId;
      }

      id = R.id.icon_message;
      ImageView iconMessage = ViewBindings.findChildViewById(rootView, id);
      if (iconMessage == null) {
        break missingId;
      }

      id = R.id.icon_mine;
      ImageView iconMine = ViewBindings.findChildViewById(rootView, id);
      if (iconMine == null) {
        break missingId;
      }

      id = R.id.label_category;
      TextView labelCategory = ViewBindings.findChildViewById(rootView, id);
      if (labelCategory == null) {
        break missingId;
      }

      id = R.id.label_home;
      TextView labelHome = ViewBindings.findChildViewById(rootView, id);
      if (labelHome == null) {
        break missingId;
      }

      id = R.id.label_message;
      TextView labelMessage = ViewBindings.findChildViewById(rootView, id);
      if (labelMessage == null) {
        break missingId;
      }

      id = R.id.label_mine;
      TextView labelMine = ViewBindings.findChildViewById(rootView, id);
      if (labelMine == null) {
        break missingId;
      }

      return new ViewBottomBarBinding((LinearLayout) rootView, bottomNav, btnCategory, btnHome,
          btnMessage, btnMine, iconCategory, iconHome, iconMessage, iconMine, labelCategory,
          labelHome, labelMessage, labelMine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
