// Generated by view binder compiler. Do not edit!
package com.example.shoes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMineBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView avatar;

  @NonNull
  public final ImageView btnSettings;

  @NonNull
  public final TextView nickname;

  @NonNull
  public final LinearLayout orderAll;

  @NonNull
  public final LinearLayout orderGroup;

  @NonNull
  public final LinearLayout orderWaitPay;

  @NonNull
  public final LinearLayout orderWaitReceive;

  @NonNull
  public final LinearLayout orderWaitShip;

  @NonNull
  public final TextView statOrders;

  @NonNull
  public final TextView statPairs;

  @NonNull
  public final TextView statSupport;

  @NonNull
  public final LinearLayout statsCard;

  @NonNull
  public final LinearLayout storyEntry;

  @NonNull
  public final TextView subtitle;

  @NonNull
  public final TextView versionText;

  private FragmentMineBinding(@NonNull ScrollView rootView, @NonNull ImageView avatar,
      @NonNull ImageView btnSettings, @NonNull TextView nickname, @NonNull LinearLayout orderAll,
      @NonNull LinearLayout orderGroup, @NonNull LinearLayout orderWaitPay,
      @NonNull LinearLayout orderWaitReceive, @NonNull LinearLayout orderWaitShip,
      @NonNull TextView statOrders, @NonNull TextView statPairs, @NonNull TextView statSupport,
      @NonNull LinearLayout statsCard, @NonNull LinearLayout storyEntry, @NonNull TextView subtitle,
      @NonNull TextView versionText) {
    this.rootView = rootView;
    this.avatar = avatar;
    this.btnSettings = btnSettings;
    this.nickname = nickname;
    this.orderAll = orderAll;
    this.orderGroup = orderGroup;
    this.orderWaitPay = orderWaitPay;
    this.orderWaitReceive = orderWaitReceive;
    this.orderWaitShip = orderWaitShip;
    this.statOrders = statOrders;
    this.statPairs = statPairs;
    this.statSupport = statSupport;
    this.statsCard = statsCard;
    this.storyEntry = storyEntry;
    this.subtitle = subtitle;
    this.versionText = versionText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mine, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatar;
      ImageView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      id = R.id.btnSettings;
      ImageView btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }

      id = R.id.nickname;
      TextView nickname = ViewBindings.findChildViewById(rootView, id);
      if (nickname == null) {
        break missingId;
      }

      id = R.id.orderAll;
      LinearLayout orderAll = ViewBindings.findChildViewById(rootView, id);
      if (orderAll == null) {
        break missingId;
      }

      id = R.id.orderGroup;
      LinearLayout orderGroup = ViewBindings.findChildViewById(rootView, id);
      if (orderGroup == null) {
        break missingId;
      }

      id = R.id.orderWaitPay;
      LinearLayout orderWaitPay = ViewBindings.findChildViewById(rootView, id);
      if (orderWaitPay == null) {
        break missingId;
      }

      id = R.id.orderWaitReceive;
      LinearLayout orderWaitReceive = ViewBindings.findChildViewById(rootView, id);
      if (orderWaitReceive == null) {
        break missingId;
      }

      id = R.id.orderWaitShip;
      LinearLayout orderWaitShip = ViewBindings.findChildViewById(rootView, id);
      if (orderWaitShip == null) {
        break missingId;
      }

      id = R.id.statOrders;
      TextView statOrders = ViewBindings.findChildViewById(rootView, id);
      if (statOrders == null) {
        break missingId;
      }

      id = R.id.statPairs;
      TextView statPairs = ViewBindings.findChildViewById(rootView, id);
      if (statPairs == null) {
        break missingId;
      }

      id = R.id.statSupport;
      TextView statSupport = ViewBindings.findChildViewById(rootView, id);
      if (statSupport == null) {
        break missingId;
      }

      id = R.id.statsCard;
      LinearLayout statsCard = ViewBindings.findChildViewById(rootView, id);
      if (statsCard == null) {
        break missingId;
      }

      id = R.id.storyEntry;
      LinearLayout storyEntry = ViewBindings.findChildViewById(rootView, id);
      if (storyEntry == null) {
        break missingId;
      }

      id = R.id.subtitle;
      TextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.versionText;
      TextView versionText = ViewBindings.findChildViewById(rootView, id);
      if (versionText == null) {
        break missingId;
      }

      return new FragmentMineBinding((ScrollView) rootView, avatar, btnSettings, nickname, orderAll,
          orderGroup, orderWaitPay, orderWaitReceive, orderWaitShip, statOrders, statPairs,
          statSupport, statsCard, storyEntry, subtitle, versionText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
